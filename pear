#!/bin/sh

set -o errexit # Exit immediately if a command exits with a non-zero status.

# Grab the full path to the git-pear project directory
pear_dir=$(cd $(dirname $0); pwd)
# The dir with all the git-pear commands
pear_commands_dir=$pear_dir/libexec
usage_command=$pear_commands_dir/usage
add_command=$pear_commands_dir/add



# Alias command to the first arg
command=$1

# The full path to the intended command
command_path=$pear_commands_dir/$command

# Exit with info if not a git directory
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "Pear adds pairs to local git directories only."
  echo "Please try using pear in a git repository"
  exit 1
else
  # Exported for use in other programs... coupled too tightly?
  export PEAR_WORKING_DIR=$(cd $(git rev-parse --show-toplevel); pwd)
fi

# If no command was given resume normal git operation
test -n "$command" || {
  $pear_commands_dir/uninstall
  exit 1
}

# if the first argument is an email address call the add command
if [[ $command =~ @ ]]; then
  # Replace the current process with a process created by invoking the add
  # command with all args
  exec $add_command "${@}"
fi

# If intended command does not exist tell the user and exit with error
test -x $command_path || {
  echo "Unknown Command:   $command"
  $usage_command
  exit 1
}

# Replace the current process with a process created by invoking the command with
# all args except the first (which was the command name)
exec $command_path "${@:2}"